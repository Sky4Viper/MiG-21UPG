<PropertyList  include="MiG-21Bison-bombableinclude.xml">

	<!-- Model -->
    
	<path>MiG-21Bison.ac</path>
	<offsets>
		<pitch-deg>-3</pitch-deg>   
		<heading-deg>0</heading-deg>
		<roll-deg>0</roll-deg>
		<x-m>0</x-m>
		<y-m>0</y-m>
		<z-m>0.15</z-m>
	</offsets>
	
	<model>
		<usage>interior</usage>
		<path>Aircraft/MiG-21UPG/Models/CockpitB.xml</path>
	</model>
	
    <!-- Rembrandt auto switching for glass -->
	
    <!--<effect>
      <inherits-from>Effects/model-transparent</inherits-from>
      <condition>
        <property>/sim/rendering/rembrandt/enabled</property>
      </condition>
      <object-name>Windshield</object-name>
      <object-name>Canopy</object-name>
    </effect>-->

  <effect>
    <inherits-from>Aircraft/MiG-21UPG/Models/Effects/Fx/mig-21bison-glass-combined</inherits-from>
    <object-name>WindshieldIns</object-name>
    <object-name>CanopyIns</object-name>
  </effect>

  <effect>
    <inherits-from>Aircraft/MiG-21UPG/Models/Effects/Fx/frostAndRain/glass</inherits-from>
    <object-name>Windshield</object-name>
    <object-name>Canopy</object-name>
  </effect>
	
	<!-- Lights -->
	
	<model>
		<path>Aircraft/MiG-21UPG/Models/Lights/LightPack.xml</path>
	</model>
	
  <nasal>
      <load><![CDATA[
  var root = cmdarg();
  var rootindex = root.getIndex();
  var mpPath = "/ai/models/multiplayer["~ rootindex ~"]/";

  var lightsPath = mpPath~"lightpack/"; #path to the property node, where all internal values are placed

  props.globals.initNode(mpPath~"sim/is-MP-Aircraft", 1, "BOOL");
      
  srand();
  #wherever you want to add randomization of time, use something like:  + rand()*0.05-0.025 (included by default where appropriate)


  #list of switches for lights - if you don't intend to use some light, assign it nil value instead, like whateverSwitch = nil; and you don't need to care about anything else
  #IMPORTANT: don't put / on the start of the string, it's already included in the mpPath property
  var navSwitch = mpPath~"controls/lighting/nav-lights-switch";
  var beaconSwitch = mpPath~"controls/lighting/beacon-switch";
  var strobeSwitch = mpPath~"controls/lighting/strobe-switch";
  var landingSwitch = mpPath~"controls/lighting/landing-lights-switch";
  var taxiSwitch = mpPath~"controls/lighting/taxi-light-switch";
  var probeSwitch = mpPath~"controls/lighting/probe-light-switch";
  var whiteSwitch = mpPath~"controls/lighting/white-light-switch";

  #switch this from 1 to 0 if you want to use advanced cyclical fading animation of the the nav lights instead of being stable on when the switch is on
  navStillOn = 1;


  #I need to set listener on some MP transferred properties; this doesn't seem to work well sometimes, so I mirror them to the original location on any change
  #This also simplifies work as I can use almost the same code for MP as is the local Nasal. Furthermore, I can use meaningful property names in the model XML files instead of referencing the MP properties. 
  var mpVar = {
  	new: func(propIn, propOut) {
  		var m = { parents: [mpVar] };
  		m.propIn = propIn;
  		m.propOut = propOut;
  		if(propIn==nil) return m;
  		m.value = getprop(propIn);
  		setprop(propOut, m.value);
  		return m;
  	},
  	check: func {
  		if(me.propIn==nil) return;
  		var newValue = getprop(me.propIn);
  		if(newValue != me.value) {
  			setprop(me.propOut, newValue);
  			me.value = newValue;
  			#print("value of "~me.propOut~" changed: "~newValue);
  		}
  	},
  };
  #init any property copy object needed in this array (anything you need to transfer over MP, but you are using the original paths in your xmls)
  #also used for properties you are using a listener on, or properties which you maybe want to manipulate during the <unload> 
  #if you're just using the pack, change the values according to the MP bindings in the -set.xml file
  #you don't need to delete the entries if the path is nil - it gets skipped automatically and the MP path is just ignored
  var mirrorValues = [
  	mpVar.new(mpPath~"sim/multiplay/generic/int[7]", mpPath~"sim/crashed"),
  	mpVar.new(mpPath~"sim/multiplay/generic/int[0]", navSwitch),
  	mpVar.new(mpPath~"sim/multiplay/generic/int[1]", beaconSwitch),
  	mpVar.new(mpPath~"sim/multiplay/generic/int[1]", strobeSwitch),
  	mpVar.new(mpPath~"sim/multiplay/generic/int[2]", landingSwitch),
  	mpVar.new(mpPath~"sim/multiplay/generic/int[3]", taxiSwitch),
  	mpVar.new(mpPath~"sim/multiplay/generic/int[3]", probeSwitch),
  	mpVar.new(mpPath~"sim/multiplay/generic/int[0]", whiteSwitch),
  ];
  #loop at the default MP transfer frequency (10Hz)
  var mirrorTimer = maketimer(0.1, func {
  	foreach(var mir; mirrorValues) {
  		mir.check();
  	}
  });
  mirrorTimer.start();



  #### NAV LIGHTS ####

  #class for a periodic fade in/out animation - for flashing, use rather standard aircraft.light.new(), as in Beacon and Strobe section
  var lightCycle = {
  	#constructor
  	new: func(propSwitch, propOut) {
  		m = { parents: [lightCycle] };
  		props.globals.initNode(propOut, 0, "DOUBLE");
  		props.globals.initNode(propSwitch, 1, "BOOL");
  		m.fadeIn = 0.4 + rand()*0.05-0.025; #fade in time
  		m.fadeOut = 0.4 + rand()*0.05-0.025; #fade out time
  		m.stayOn = 1.5 + rand()*0.05-0.025; #stable on period
  		m.stayOff = 1 + rand()*0.05-0.025; #stable off period
  		m.turnOff = 0.12; #fade out time when turned off
  		m.phase = 0; #phase to be run on next timer call: 0 -> fade in, 1 -> stay on, 2 -> fade out, 3 -> stay off
  		m.cycleTimer = maketimer(0.1, func {
  			if(getprop(propSwitch)) {
  				if(m.phase == 0) {
  					interpolate(propOut, 1, m.fadeIn);
  					m.phase = 1;
  					m.cycleTimer.restart(m.fadeIn);
  				}
  				else if(m.phase == 1){
  					m.phase = 2;
  					m.cycleTimer.restart(m.stayOn);
  				}
  				else if(m.phase == 2){
  					interpolate(propOut, 0, m.fadeOut);
  					m.phase = 3;
  					m.cycleTimer.restart(m.fadeOut);
  				}
  				else if(m.phase == 3){
  					m.phase = 0;
  					m.cycleTimer.restart(m.stayOff);
  				}
  			}
  			else {
  				interpolate(propOut, 0, m.turnOff); #kills any currently ongoing interpolation
  				m.phase = 0;
  			}
  		});
  		m.cycleTimer.singleShot = 1;
  		if(propSwitch==nil) {
  			m.listen = nil;
  			return m;
  		}
  		m.listen = setlistener(propSwitch, func{m.cycleTimer.restart(0);}); #handle switch changes
  		m.cycleTimer.restart(0); #start the looping
  		return m;
  	},
  	#destructor
  	del: func {
  		if(me.listen!=nil) removelistener(me.listen);
  		me.cycleTimer.stop();
  	},
  };

  #By default, the switch property is initialized to 1 (only if no value is already assigned). Don't change the class implementation! To override this, set the property manually. You don't need to care if any other code already does it for you. 
  var navLights = nil;
  if(!navStillOn) {
  	navLights = lightCycle.new(navSwitch, lightsPath~"nav-lights-intensity");
  	### Uncomment and tune those to customize times ###
  	#navLights.fadeIn = 0.4; #fade in time 
  	#navLights.fadeOut = 0.4; #fade out time
  	#navLights.stayOn = 3 + rand()*0.05-0.025; #stable on period
  	#navLights.stayOff = 0.6; #stable off period
  	#navLights.turnOff = 0.12; #fade out time when turned off
  }


  ### BEACON ###
  var beacon = nil;
  if(beaconSwitch!=nil) {
  	props.globals.initNode(beaconSwitch, 1, "BOOL");
  	beacon = aircraft.light.new(lightsPath~"beacon-state", 
  		[0.0, 1.0 + rand()*0.05-0.025], beaconSwitch);
  }
	
	
  ### STROBE ###
  var strobe = nil;
  if(strobeSwitch!=nil) {
  	props.globals.initNode(strobeSwitch, 1, "BOOL");
  	strobe = aircraft.light.new(lightsPath~"strobe-state", 
  		[0.0, 0.87 + rand()*0.05-0.025], strobeSwitch);
  }


  ### LIGHT FADING ###

  #class for controlling fade in/out behavior - propIn is a control property (handled as a boolean) and propOut is interpolated
  #all light brightness animations in xmls depend on propOut (Rembrandt brightness, material emission, flares transparency, ...)
  var lightFadeInOut = {
  	#constructor
  	new: func(propSwitch, propOut) {
  		m = { parents: [lightFadeInOut] };
  		m.fadeIn = 0.3; #some sane defaults
  		m.fadeOut = 0.4;
  		if(propSwitch==nil) {
  			m.listen = nil;
  			return m;
  		}
  		props.globals.initNode(propSwitch, 1, "BOOL");
  		m.isOn = getprop(propSwitch);
  		props.globals.initNode(propOut, m.isOn, "DOUBLE");
  		m.listen = setlistener(propSwitch, 
  			func {
  				if(m.isOn and !getprop(propSwitch)) {
  					interpolate(propOut, 0, m.fadeOut);
  					m.isOn = 0;
  				}
  				if(!m.isOn and getprop(propSwitch)) {
  					interpolate(propOut, 1, m.fadeIn);
  					m.isOn = 1;
  				}
  			}
  		);
  		return m;
  	},
  	#destructor
  	del: func {
  		if(me.listen!=nil) removelistener(me.listen);
  	},
  };

  fadeLanding = lightFadeInOut.new(landingSwitch, lightsPath~"landing-lights-intensity");
  fadeTaxi = lightFadeInOut.new(taxiSwitch, lightsPath~"taxi-light-intensity");
  fadeProbe = lightFadeInOut.new(probeSwitch, lightsPath~"probe-light-intensity");
  fadeWhite = lightFadeInOut.new(whiteSwitch, lightsPath~"white-light-intensity");
  if(navStillOn) {
  	navLights = lightFadeInOut.new(navSwitch, lightsPath~"nav-lights-intensity");
  	navLights.fadeIn = 0.1;
  	navLights.fadeOut = 0.12;
  }
  #manipulate times if defaults don't fit your needs:
  #fadeLanding.fadeIn = 0.5;
  #fadeLanding.fadeOut = 0.8;


  ### the rest of your model load embedded Nasal code ###

      ]]>
      </load>
      <unload>
        stopFire();
        disintegrated = 0;
        removelistener(listenCrash);
      
        #prevent multiple timers and listeners from running and fighting on next connect
        #cleanly destroy MP property mirroring
        mirrorTimer.stop();
        mirrorTimer = nil;
        mirrorValues = nil;
      
        #cleanly destroy nav lights
        if(navStillOn) {
        	navLights.del();
        }
        else {
        	if(navSwitch!=nil) setprop(navSwitch, 0);
        	navLights.del();
        	if(navSwitch!=nil) navLights.cycleTimer = nil;
        	navLights = nil;
        }
      
        #cleanly destroy beacon
        if(beaconSwitch!=nil) setprop(beaconSwitch, 0);
        beacon.del();
        beacon = nil;
      
        #cleanly destroy strobe
        if(strobeSwitch!=nil) setprop(strobeSwitch, 0);
        strobe.del();
        strobe = nil;
      
        #cleanly destroy light fade in/out animation objects
        fadeLanding.del();
        fadeTaxi.del();
        fadeProbe.del();
        fadeWhite.del();
      
        ### the rest of your model unload embedded Nasal code ###
      </unload>
    </nasal>

  
  <animation>
    <type>material</type>
    <object-name>WindshieldArch</object-name>
    <object-name>WindshieldArch_ins</object-name>
    <object-name>CanopyArch</object-name>
    <!--<object-name>cockpit_frame</object-name>-->
    <object-name>Fuselage</object-name>
    <object-name>Cone</object-name>

    <object-name>GearDoorsNL</object-name>
    <object-name>GearDoorsNR</object-name>
    <object-name>GearDoorsL</object-name>
    <object-name>GearDoorsR</object-name>
    <object-name>GearDoors1L</object-name>
    <object-name>GearDoors1R</object-name>
    <object-name>GearDoors3L</object-name>
    <object-name>GearDoors3R</object-name>
    <object-name>GearDoors2L</object-name>
    <object-name>GearDoors2R</object-name>
    <object-name>SpeedbrakeL</object-name>
    <object-name>SpeedbrakeR</object-name>
    <object-name>Airbrake</object-name>

    <object-name>WingL</object-name>
    <object-name>WingR</object-name>
    <object-name>FlapL</object-name>
    <object-name>FlapR</object-name>
    <object-name>AileronL</object-name>
    <object-name>AileronR</object-name>

    <object-name>ElevatorR</object-name>
    <object-name>Tail</object-name>
    <object-name>Rudder</object-name>
    <object-name>Fin</object-name>

    <object-name>gsh23l</object-name>

    <object-name>Antenna</object-name>
    <object-name>Pitot</object-name>
    <object-name>GillFL</object-name>
    <object-name>GillFR</object-name>
    <object-name>GillBL</object-name>
    <object-name>GillBR</object-name>
    <object-name>Ladders</object-name>
    <object-name>Exhaust</object-name>
    <object-name>lamp</object-name>

    <object-name>ChuteCapL</object-name>
    <object-name>ChuteCapR</object-name>

    <object-name>Pylon1L</object-name>
    <object-name>Pylon2L</object-name>
    <object-name>PylonC</object-name>
    <object-name>Pylon2R</object-name>
    <object-name>Pylon1R</object-name>
    <object-name>BD3</object-name>
    <object-name>APU-470-L</object-name>
    <object-name>APU-470-R</object-name>
    <object-name>APU-73-L</object-name>
    <object-name>APU-73-R</object-name>
    <object-name>APU-60-L</object-name>
    <object-name>APU-60-R</object-name>
    <property-base>sim/model/livery</property-base>
    <texture-prop>texture</texture-prop>
    <texture>Aircraft/MiG-21UPG/Models/Liveries/Default.dds</texture>
  </animation>
	
	<!-- Shaders -->

  <!-- Bumpmap -->

  <!-- Specular -->

  <!-- Combined Material shaders WIP  -->
  <effect>
    <inherits-from>Aircraft/MiG-21UPG/Models/Effects/Fx/mig-21bison-combined-shader</inherits-from>
    <object-name>WindshieldArch</object-name>
    <!--<object-name>WindshieldArch_ins</object-name>-->
    <object-name>CanopyArch</object-name>
    <!--<object-name>cockpit_frame</object-name>-->
    <object-name>Fuselage</object-name>
    <object-name>Cone</object-name>

    <object-name>GearDoorsNL</object-name>
    <object-name>GearDoorsNR</object-name>
    <object-name>GearDoorsL</object-name>
    <object-name>GearDoorsR</object-name>
    <object-name>GearDoors1L</object-name>
    <object-name>GearDoors1R</object-name>
    <object-name>GearDoors3L</object-name>
    <object-name>GearDoors3R</object-name>
    <object-name>GearDoors2L</object-name>
    <object-name>GearDoors2R</object-name>
    <object-name>SpeedbrakeL</object-name>
    <object-name>SpeedbrakeR</object-name>
    <object-name>Airbrake</object-name>

    <object-name>WingL</object-name>
    <object-name>WingR</object-name>
    <object-name>FlapL</object-name>
    <object-name>FlapR</object-name>
    <object-name>AileronL</object-name>
    <object-name>AileronR</object-name>

    <object-name>ElevatorR</object-name>
    <object-name>Tail</object-name>
    <object-name>Rudder</object-name>
    <object-name>Fin</object-name>

    <object-name>gsh23l</object-name>

    <object-name>Antenna</object-name>
    <object-name>Pitot</object-name>
    <object-name>GillFL</object-name>
    <object-name>GillFR</object-name>
    <object-name>GillBL</object-name>
    <object-name>GillBR</object-name>
    <object-name>Ladders</object-name>
    <object-name>Exhaust</object-name>

    <object-name>ChuteCapL</object-name>
    <object-name>ChuteCapR</object-name>

    <object-name>Pylon1L</object-name>
    <object-name>Pylon2L</object-name>
    <object-name>PylonC</object-name>
    <object-name>Pylon2R</object-name>
    <object-name>Pylon1R</object-name>
    <object-name>BD3</object-name>
    <object-name>APU-470-L</object-name>
    <object-name>APU-470-R</object-name>
    <object-name>APU-73-L</object-name>
    <object-name>APU-73-R</object-name>
    <object-name>APU-60-L</object-name>
    <object-name>APU-60-R</object-name>
  </effect>
	
    <!-- Parts invisible from internally -->
    
 <!--<animation>
      <type>select</type>
      <object-name>Windshield</object-name>
      <object-name>Canopy</object-name>
		<condition>
      <not>
         <property>sim/current-view/internal</property>
      </not>
    </condition>
    </animation>-->
	
	<!-- MP sound -->

	<sound>
		<path>Aircraft/MiG-21UPG/Sounds/MP-Sound.xml</path>
	</sound>

  <!-- Payload -->

  <model>
    <path>Aircraft/MiG-21UPG/Models/Payload/PayloadC.xml</path>
  </model>

  <!-- Pylons  -->

  <model>
    <path>Aircraft/MiG-21UPG/Models/Payload/PylonsB.xml</path>
  </model>

  <model>
    <path>Aircraft/MiG-21UPG/Models/Exhausts/exhaustsB.xml</path>
    <offsets>
      <x-m>4.94639 </x-m>
      <y-m>0.00000 </y-m>
      <z-m>0.28933</z-m>
    </offsets>
  </model>
  
	<!-- Effects -->
	
	<model>
		<name>Effects</name>
		<path>Aircraft/MiG-21UPG/Models/EffectsB.xml</path>
	</model>

	<!-- Livery -->
    
	<nasal>
		<load>
      var livery_update = aircraft.livery_update.new("Aircraft/MiG-21UPG/Models/Liveries");
    </load>
		<unload>
			livery_update.stop();
		</unload>
	</nasal>

  <animation>
    <type>shader</type>
    <shader>chrome</shader>
    <texture>Aircraft/Generic/Effects/glass_shader.png</texture>
    <object-name>MirrorR.M</object-name>
    <object-name>MirrorL.M</object-name>
  </animation>
	
	<animation>
		<type>material</type>
		<object-name>heat</object-name>
		<emission>
			<red>255</red>
			<green>255</green>
			<blue>254</blue>
		</emission>
	</animation>
  
  <!--<animation>
		<type>material</type>
		<object-name>nozzle_inside</object-name>
    <emission>
      <red>1.1</red>
      <green>0.3</green>
      <blue>0.1</blue>
      <property>/controls/throttle[0]</property>
      <factor>1</factor>
      <min>0.0</min>
      <max>0.5</max>
    </emission>
	</animation>-->

	<!-- Animations -->

	<animation>
		 <type>translate</type>
		 <object-name>Pilot</object-name>
		 <object-name>Seat</object-name>
		 <property>controls/eject</property>
		 <factor>20</factor>
		 <center>
			 <x-m>0</x-m>
			 <y-m>0</y-m>
			 <z-m>0</z-m>
		 </center>
		 <axis>
			 <x>0</x>
			 <y>0</y>
			 <z>1</z>
		 </axis>
	 </animation>

  <!--<model>
    <name>ext-power</name>
    <path>Aircraft/MiG-21UPG/Models/EXT-Power/volvo/volvo.xml</path>
    <offsets>
      <x-m>-2.8257</x-m>
      <y-m>9.38872</y-m>
      <z-m>-1.38246</z-m>
    </offsets>
  </model>-->

  <model>
    <name>ground-equipment</name>
    <path>Aircraft/MiG-21UPG/Models/Ground-Equipment/ground-equipment-model.xml</path>
    <offsets>
      <x-m>0</x-m>
      <y-m>0</y-m>
      <z-m>0</z-m>
    </offsets>
  </model>

  <!--<animation>
    <type>translate</type>
    <object-name>ext-power</object-name>
    <property>fdm/jsbsim/systems/electrical/ext-power-z-m</property>
    <factor>1</factor>
    <axis>
      <z>1</z>
    </axis>
    <center>
      <x-m>0</x-m>
      <y-m>0.0</y-m>
      <z-m>0</z-m>
    </center>
  </animation>-->

  <!--<animation>
  <type>select</type>
  <object-name>ext-power</object-name>
  <condition>
    <property>controls/power/auxinverter</property>
  </condition>
 </animation>-->

  <!--<animation>
    <type>scale</type>
    <object-name>ext-power</object-name>
    <property>fdm/jsbsim/systems/electrical/external/available</property>
    <interpolation>
      <entry>
        <ind> 0.00 </ind>
        <dep> 0.00 </dep>
      </entry>
      <entry>
        <ind> 0.01 </ind>
        <dep> 1.00 </dep>
      </entry>
    </interpolation>
    <center>
      <x-m>  0 </x-m>
      <y-m>  0 </y-m>
      <z-m>  0 </z-m>
    </center>
    <x-min>0.0</x-min>
    <y-min>0.0</y-min>
    <z-min>0.0</z-min>
    <x-max>1.0</x-max>
    <y-max>1.0</y-max>
    <z-max>1.0</z-max>
    <axis>
      <x>1.0</x>
      <y>1.0</y>
      <z>1.0</z>
    </axis>
  </animation>-->
	 
	<animation>
		 <type>select</type>
		 <object-name>Canopy</object-name>
		 <object-name>CanopyArch</object-name>
    <object-name>CanopyIns</object-name>
		 <condition>
			 <not>
				 <property>controls/eject</property>
			 </not>
		 </condition>
	 </animation>
  
  <animation>
    <type>select</type>
    <object-name>gsh23l</object-name>
    <condition>
        <equals>
          <property>sim/weight[3]/payload-int</property>
          <value>4</value>
        </equals>
    </condition>
  </animation>
	
	<animation>
		<type>select</type>
		<object-name>heat</object-name>
		<condition>
			<!--<property>engines/engine[0]/running</property>-->
      <or>
        <and>
          <greater-than>
            <property>sim/multiplay/generic/float[8]</property>
            <value>0.0</value>
          </greater-than>
          <not>
            <property>fdm/jsbsim/systems/crash-detect/crashed</property>
          </not>
        </and>
        <and>
          <property>/controls/engines/engine[0]/starter</property>
          <greater-than>
            <property>/engines/engine[0]/rpm</property>
            <value>50</value>
          </greater-than>
        </and>
      </or>
		</condition>
	</animation>

  <animation>
    <type>select</type>
    <object-name>lamp</object-name>
    <condition>
      <property>controls/lighting/landing-lights-switch</property>
    </condition>
  </animation>
    
	<animation>
		<type>rotate</type>
    <object-name>Canopy</object-name>
    <object-name>CanopyIns</object-name>
    <object-name>CanopyArch</object-name>
    <object-name>CanopyArchIns</object-name>
    <object-name>MirrorL.Case</object-name>
    <object-name>MirrorL.Rt</object-name>
    <object-name>MirrorL.M</object-name>
    <object-name>MirrorR.Case</object-name>
    <object-name>MirrorR.Rt</object-name>
    <object-name>MirrorR.M</object-name>
    <object-name>MirrorL.K</object-name>
    <object-name>MirrorR.K</object-name>
    <object-name>RFCtbl1</object-name>
		<!--<property>canopy/position-norm</property>
		<factor>-80.00</factor>-->
    <property>sim/model/door-positions/canopy/position-norm</property>
    <interpolation>
      <entry><ind>0</ind><dep> 0</dep></entry>
      <entry><ind>1</ind><dep>-80</dep></entry>
    </interpolation>
		<axis>
			<x1-m> -3.82172</x1-m>
			<y1-m>  0.39038</y1-m>
			<z1-m>  0.71507</z1-m>
			<x2-m> -3.13549</x2-m>
			<y2-m>  0.37643</y2-m>
			<z2-m>  0.7607</z2-m>
		</axis>
	</animation>

  <animation>
    <type>spin</type>
    <object-name>choke</object-name>
    <property>engines/engine[0]/n2</property>
    <factor>6</factor> 
    <condition>
      <or>
        <property>/controls/engines/engine[0]/starter</property>
        <property>engines/engine[0]/running</property>
        <and>
          <property>/controls/engines/engine[0]/cutoff</property>
          <greater-than>
            <property>/controls/engines/engine[0]/n1</property>
            <value>0</value>
          </greater-than>
        </and>
      </or>
      <not>
        <property>fdm/jsbsim/systems/crash-detect/crashed</property>
      </not>
    </condition>
    <center>
      <x-m>3.85628</x-m>
      <y-m>0.00122</y-m>
      <z-m>0.29495</z-m>
    </center>
    <axis>
      <x>1</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>

	<animation>
		<type>rotate</type>
		<object-name>Airbrake</object-name>
		<object-name>AbhydroC</object-name>
		<property>surface-positions/speedbrake-pos-norm</property>
		<condition>
			<equals>
        <property>sim/weight[4]/selected</property>
        <value>none</value>
			</equals>
		</condition>
		<factor>35.00</factor>
		<axis>
			<x1-m> 0.48303</x1-m>
			<y1-m>-0.11213</y1-m>
			<z1-m>-0.38187</z1-m>
			<x2-m> 0.48303</x2-m>
			<y2-m> 0.11213</y2-m>
			<z2-m>-0.38187</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
    <object-name>SpeedbrakeR</object-name>
    <object-name>AbhydroR</object-name>
		<property>surface-positions/speedbrake-pos-norm</property>
		<factor>-35.00</factor>
		<axis>
			<x1-m>-2.84993</x1-m>
			<y1-m>0.38254</y1-m>
			<z1-m>-0.26047</z1-m>
			<x2-m>-2.84993</x2-m>
			<y2-m>0.27012</y2-m>
			<z2-m>-0.34353</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>SpeedbrakeL</object-name>
		<object-name>AbhydroL</object-name>
		<property>surface-positions/speedbrake-pos-norm</property>
		<factor>35.00</factor>
		<axis>
      <x1-m>-2.84993</x1-m>
      <y1-m>-0.38254</y1-m>
      <z1-m>-0.26047</z1-m>
      <x2-m>-2.84993</x2-m>
      <y2-m>-0.27012</y2-m>
      <z2-m>-0.34353</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>Rudder</object-name>
		<property>controls/flight/rudder</property>
		<factor>25</factor>
		<axis>
			<x1-m>4.68876</x1-m>
			<y1-m>0.00</y1-m>
			<z1-m>1.12358</z1-m>
			<x2-m>6.07262</x2-m>
			<y2-m>0.00</y2-m>
			<z2-m>2.54029</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>ElevatorR</object-name>
		<property>surface-positions/elevator-pos-norm</property>
		<factor>15.00</factor>
		<offset-deg>0.00</offset-deg>   
		<center>
			<x-m>4.37503</x-m>
			<y-m>0.00</y-m>
			<z-m>0.36006</z-m>
		</center>
		<axis>
			<x>0.00</x>
			<y>1.00</y>
			<z>0.00</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>FlapR</object-name>
		<property>surface-positions/flap-pos-norm</property>
		<factor>30.00</factor>
		<axis>
			<x1-m> 1.65829</x1-m>
			<y1-m> 0.66465</y1-m>
			<z1-m> 0.12917</z1-m>
			<x2-m> 1.66548</x2-m>
			<y2-m> 1.90897</y2-m>
			<z2-m> 0.10257</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>FlapL</object-name>
		<property>surface-positions/flap-pos-norm</property>
		<factor>-30.00</factor>
		<axis>
			<x1-m> 1.65829</x1-m>
			<y1-m>-0.66465</y1-m>
			<z1-m> 0.12917</z1-m>
			<x2-m> 1.66548</x2-m>
			<y2-m>-1.90897</y2-m>
			<z2-m> 0.10257</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>AileronR</object-name>
		<property>surface-positions/right-aileron-pos-norm</property>
		<factor>-15.00</factor>
		<axis>
			<x1-m> 1.75013</x1-m>
			<y1-m> 1.98721</y1-m>
			<z1-m> 0.11702</z1-m>
			<x2-m> 2.04712</x2-m>
			<y2-m> 3.18335</y2-m>
			<z2-m> 0.08271</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>AileronL</object-name>
		<property>surface-positions/left-aileron-pos-norm</property>
		<factor>-15.00</factor>
		<axis>
      <x1-m> 1.75013</x1-m>
      <y1-m>-1.98721</y1-m>
      <z1-m> 0.11702</z1-m>
      <x2-m> 2.04712</x2-m>
      <y2-m>-3.18335</y2-m>
      <z2-m> 0.08271</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>GearDoorsNR</object-name>
		<property>gear/gear[0]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>90</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>90</dep>
			</entry>
		</interpolation>
		<axis>
			<x1-m>-5.45002</x1-m>
			<y1-m> 0.16574</y1-m>
			<z1-m>-0.41034</z1-m>
			<x2-m>-4.4628</x2-m>
			<y2-m> 0.16317</y2-m>
			<z2-m>-0.41077</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>GillFR</object-name>
		<property>gear/gear[2]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>30</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>30</dep>
			</entry>
		</interpolation>
		<axis>
			<x1-m>-5.59868</x1-m>
			<y1-m> 0.50934</y1-m>
			<z1-m> 0.2025</z1-m>
			<x2-m>-5.59619</x2-m>
			<y2-m> 0.48459</y2-m>
			<z2-m>-0.08956</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>GillFL</object-name>
		<property>gear/gear[1]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>-30</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>-30</dep>
			</entry>
		</interpolation>
		<axis>
      <x1-m>-5.59868</x1-m>
      <y1-m>-0.50934</y1-m>
      <z1-m> 0.2025</z1-m>
      <x2-m>-5.59619</x2-m>
      <y2-m>-0.48459</y2-m>
      <z2-m>-0.08956</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>GillBR</object-name>
		<property>gear/gear[2]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>30</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>30</dep>
			</entry>
		</interpolation>
		<axis>
			<x1-m>-3.44216</x1-m>
			<y1-m> 0.54171</y1-m>
			<z1-m> 0.08979</z1-m>
			<x2-m>-3.44216</x2-m>
			<y2-m> 0.48051</y2-m>
			<z2-m>-0.05</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>GillBL</object-name>
		<property>gear/gear[1]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>-30</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>-30</dep>
			</entry>
		</interpolation>
		<axis>
      <x1-m>-3.44216</x1-m>
      <y1-m>-0.54171</y1-m>
      <z1-m> 0.08979</z1-m>
      <x2-m>-3.44216</x2-m>
      <y2-m>-0.48051</y2-m>
      <z2-m>-0.05</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>GearDoorsNL</object-name>
		<property>gear/gear[0]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>-90</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>-90</dep>
			</entry>
		</interpolation>
		<axis>
      <x1-m>-5.45002</x1-m>
      <y1-m>-0.16574</y1-m>
      <z1-m>-0.41034</z1-m>
      <x2-m>-4.4628</x2-m>
      <y2-m>-0.16317</y2-m>
      <z2-m>-0.41077</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>GearDoorsL</object-name>
		<property>gear/gear[2]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>-96</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>-96</dep>
			</entry>
		</interpolation>
		<axis>
			<x1-m>0.06501</x1-m>
			<y1-m>-0.24221</y1-m>
			<z1-m>-0.31247</z1-m>
			<x2-m>-0.81293</x2-m>
			<y2-m>-0.25007</y2-m>
			<z2-m>-0.32835</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>GearDoorsR</object-name>
		<property>gear/gear[1]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>96</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>96</dep>
			</entry>
		</interpolation>
		<axis>
      <x1-m>0.06501</x1-m>
      <y1-m>0.24221</y1-m>
      <z1-m>-0.31247</z1-m>
      <x2-m>-0.81293</x2-m>
      <y2-m>0.25007</y2-m>
      <z2-m>-0.32835</z2-m>
		</axis>
	</animation>

	<animation>
		<type>select</type>
		<object-name>WheelN</object-name>
		<object-name>Jaw</object-name>
		<object-name>Strut1N</object-name>
    <object-name>Strut2N</object-name>
		<condition>
			<greater-than>
				<property>gear/gear[0]/position-norm</property>
				<value>0</value>
			</greater-than>
		</condition>
	</animation>

	<animation>
		<type>select</type>
		<object-name>WheelR</object-name>
		<object-name>Strut2R</object-name>
    <object-name>Strut5R</object-name>
		<object-name>Strut1R</object-name>
		<object-name>Strut4R</object-name>
		<object-name>Strut3R</object-name>
    <object-name>WheelL</object-name>
    <object-name>Strut2L</object-name>
    <object-name>Strut5L</object-name>
    <object-name>Strut1L</object-name>
    <object-name>Strut4L</object-name>
    <object-name>Strut3L</object-name>
    <object-name>lamp</object-name>
		<condition>
			<greater-than>
				<property>gear/gear[0]/position-norm</property>
				<value>0.15</value>
			</greater-than>
		</condition>
	</animation>

	<animation>
		<type>rotate</type>
    <object-name>WheelN</object-name>
    <object-name>Jaw</object-name>
    <object-name>Strut1N</object-name>
    <object-name>Strut2N</object-name>
		<property>gear/gear[0]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>-110</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>-110</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>0</dep>
			</entry>
		</interpolation>
		<center>
			<x-m>-4.39204</x-m>
			<y-m> 0.00</y-m>
			<z-m>-0.26307</z-m>
		</center>
		<axis>
			<x> 0</x>
			<y>-1</y>
			<z> 0</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
    <object-name>WheelN</object-name>
    <object-name>Jaw</object-name>
    <object-name>Strut1N</object-name>
    <object-name>Strut2N</object-name>
		<property>surface-positions/rudder-pos-norm</property>
		<factor>25</factor>
		<center>
      <x-m>-4.39204</x-m>
      <y-m> 0.00</y-m>
      <z-m>-0.26307</z-m>
		</center>
		<axis>
			<x>0.0</x>
			<y>0.0</y>
			<z>1.0</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
    <object-name>WheelR</object-name>
    <object-name>Strut2R</object-name>
    <object-name>Strut1R</object-name>
    <object-name>Strut4R</object-name>
    <object-name>Strut3R</object-name>
    <object-name>Strut5R</object-name>
		<property>gear/gear[2]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>92</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>92</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>0</dep>
			</entry>
		</interpolation>
		<axis>
      <x1-m> 0.46894</x1-m>
      <y1-m> 1.40957</y1-m>
      <z1-m> 0.09385</z1-m>
      <x2-m> 0.31894</x2-m>
      <y2-m> 1.55957</y2-m>
      <z2-m> 0.09385</z2-m>
		</axis>
	</animation>

  <!--<animation>
    <type>translate</type>
    <object-name>right_outer_door_up</object-name>
    <object-name>right_outer_door_down</object-name>
    <property>gear/gear[2]/position-norm</property>
    <interpolation>
      <entry>
        <ind>0.0</ind>
        <dep>0</dep>
      </entry>
      <entry>
        <ind>0.5</ind>
        <dep>0</dep>
      </entry>
      <entry>
        <ind>1.0</ind>
        <dep>0.10</dep>
      </entry>
    </interpolation>
    <axis>
      <x>0</x>
      <y>0</y>
      <z>1</z>
    </axis>
  </animation>-->

	<animation>
		<type>rotate</type>
		<object-name>GearDoors2R</object-name>
		<object-name>GearDoors3R</object-name>
    <object-name>GearDoors1R</object-name>
		<property>gear/gear[2]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>-92</dep>
			</entry>
		</interpolation>
		<axis>
      <x1-m> 0.51484</x1-m>
      <y1-m> 1.54644</y1-m>
      <z1-m> 0.03142</z1-m>
      <x2-m> 0.36484</x2-m>
      <y2-m> 1.69644</y2-m>
      <z2-m> 0.03142</z2-m>
		</axis>
	</animation>
    
	<animation>
		<type>rotate</type>
    <object-name>GearDoors2R</object-name>
    <object-name>GearDoors3R</object-name>
    <object-name>GearDoors1R</object-name>
		<property>gear/gear[2]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>-25</dep>
			</entry>
		</interpolation>
		<axis>
      <x1-m>0.22484</x1-m>
      <y1-m>1.36644</y1-m>
      <z1-m>0.00142</z1-m>
      <x2-m>-0.13516</x2-m>
      <y2-m>0.97644</y2-m>
      <z2-m>0.00142</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
    <object-name>GearDoors1R</object-name>
		<property>gear/gear[2]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>-48</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>-48</dep>
			</entry>
		</interpolation>
		<axis>
			<x1-m>-0.14762</x1-m>
			<y1-m>0.78017</y1-m>
			<z1-m>0.04332</z1-m>
			<x2-m>-0.33464</x2-m>
			<y2-m>0.93881</y2-m>
			<z2-m>0.03705</z2-m>
		</axis>
	</animation>

  <!--<animation>
    <type>translate</type>
    <object-name>left_outer_door_up</object-name>
    <object-name>left_outer_door_down</object-name>
    <property>gear/gear[1]/position-norm</property>
    <interpolation>
      <entry>
        <ind>0.0</ind>
        <dep>0</dep>
      </entry>
      <entry>
        <ind>0.5</ind>
        <dep>0</dep>
      </entry>
      <entry>
        <ind>1.0</ind>
        <dep>0.10</dep>
      </entry>
    </interpolation>
    <axis>
      <x>0</x>
      <y>0</y>
      <z>1</z>
    </axis>
  </animation>-->

	<animation>
		<type>rotate</type>
    <object-name>GearDoors2L</object-name>
    <object-name>GearDoors3L</object-name>
    <object-name>GearDoors1L</object-name>
		<property>gear/gear[1]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>92</dep>
			</entry>
		</interpolation>
      <axis>
        <x1-m> 0.51484</x1-m>
        <y1-m>-1.54644</y1-m>
        <z1-m> 0.03142</z1-m>
        <x2-m> 0.36484</x2-m>
        <y2-m>-1.69644</y2-m>
        <z2-m> 0.03142</z2-m>
      </axis>
	</animation>
    
	<animation>
		<type>rotate</type>
    <object-name>GearDoors2L</object-name>
    <object-name>GearDoors3L</object-name>
    <object-name>GearDoors1L</object-name>
		<property>gear/gear[1]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>25</dep>
			</entry>
		</interpolation>
		<axis>
      <x1-m>0.22484</x1-m>
      <y1-m>-1.36644</y1-m>
      <z1-m>0.00142</z1-m>
      <x2-m>-0.13516</x2-m>
      <y2-m>-0.97644</y2-m>
      <z2-m>0.00142</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
    <object-name>GearDoors1L</object-name>
		<property>gear/gear[1]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>48</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>48</dep>
			</entry>
		</interpolation>
    <axis>
      <x1-m>-0.14762</x1-m>
      <y1-m>-0.78017</y1-m>
      <z1-m>0.04332</z1-m>
      <x2-m>-0.33464</x2-m>
      <y2-m>-0.93881</y2-m>
      <z2-m>0.03705</z2-m>
    </axis>
	</animation>

	<animation>
		<type>rotate</type>
    <object-name>Strut4R</object-name>
    <object-name>Strut3R</object-name>
		<property>gear/gear[2]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>-115</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>-115</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>0</dep>
			</entry>
		</interpolation>
		<axis>   
			<x1-m> 0.44349</x1-m>
			<y1-m> 1.45849</y1-m>
			<z1-m>-0.11598</z1-m>
			<x2-m> 0.29349</x2-m>
			<y2-m> 1.60849</y2-m>
			<z2-m>-0.11598</z2-m>
		</axis>
	</animation>

	<!--<animation>
		<type>translate</type>
		<object-name>Strut2R</object-name>
		<object-name>WheelR</object-name>
    <object-name>Strut5R</object-name>
		<property>gear/gear[2]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>-0.45</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>-0.45</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>0</dep>
			</entry>
		</interpolation>
		<axis>
			<x>0</x>
			<y>0</y>
			<z>1</z>
		</axis>
	</animation>-->

	<animation>
		<type>rotate</type>
		<object-name>WheelR</object-name>
    <object-name>Strut5R</object-name>
		<property>gear/gear[2]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>-115</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>-115</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>0</dep>
			</entry>
		</interpolation>
		<axis>
      <x1-m> 0.46894</x1-m>
      <y1-m> 1.40957</y1-m>
      <z1-m>-0.98923</z1-m>
      <x2-m> 0.31894</x2-m>
      <y2-m> 1.55957</y2-m>
      <z2-m>-0.98923</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
    <object-name>WheelL</object-name>
    <object-name>Strut2L</object-name>
    <object-name>Strut5L</object-name>
    <object-name>Strut1L</object-name>
    <object-name>Strut4L</object-name>
    <object-name>Strut3L</object-name>
		<property>gear/gear[1]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>-92</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>-92</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>0</dep>
			</entry>
		</interpolation>
		<axis>
      <x1-m> 0.46894</x1-m>
      <y1-m>-1.40957</y1-m>
      <z1-m> 0.09385</z1-m>
      <x2-m> 0.31894</x2-m>
      <y2-m>-1.55957</y2-m>
      <z2-m> 0.09385</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
    <object-name>Strut4L</object-name>
    <object-name>Strut3L</object-name>
		<property>gear/gear[1]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>115</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>115</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>0</dep>
			</entry>
		</interpolation>
    <axis>
      <x1-m> 0.44349</x1-m>
      <y1-m>-1.45849</y1-m>
      <z1-m>-0.11598</z1-m>
      <x2-m> 0.29349</x2-m>
      <y2-m>-1.60849</y2-m>
      <z2-m>-0.11598</z2-m>
    </axis>
	</animation>

	<!--<animation>
		<type>translate</type>
    <object-name>Strut2L</object-name>
    <object-name>Strut5L</object-name>
    <object-name>WheelL</object-name>
		<property>gear/gear[1]/position-norm</property>
		<interpolation>
			<entry>
				<ind>0.0</ind>
				<dep>-0.45</dep>
			</entry>
			<entry>
				<ind>0.5</ind>
				<dep>-0.45</dep>
			</entry>
			<entry>
				<ind>1.0</ind>
				<dep>0</dep>
			</entry>
		</interpolation>
		<axis>
			<x>0</x>
			<y>0</y>
			<z>1</z>
		</axis>
	</animation>-->

  <animation>
    <type>rotate</type>
    <object-name>WheelL</object-name>
    <object-name>Strut5L</object-name>
    <property>gear/gear[1]/position-norm</property>
    <interpolation>
      <entry>
        <ind>0.0</ind>
        <dep>115</dep>
      </entry>
      <entry>
        <ind>0.5</ind>
        <dep>115</dep>
      </entry>
      <entry>
        <ind>1.0</ind>
        <dep>0</dep>
      </entry>
    </interpolation>
    <axis>
      <x1-m> 0.46894</x1-m>
      <y1-m>-1.40957</y1-m>
      <z1-m>-0.98923</z1-m>
      <x2-m> 0.31894</x2-m>
      <y2-m>-1.55957</y2-m>
      <z2-m>-0.98923</z2-m>
    </axis>
  </animation>

  <!--<animation>
    <type>translate</type>
    <object-name>Strut2L</object-name>
    --><!--<object-name>Strut5L</object-name>
    <object-name>WheelL</object-name>--><!--
    <property>gear/gear[1]/position-norm</property>
    <interpolation>
      <entry>
        <ind>0.0</ind>
        <dep>0.15</dep>
      </entry>
      <entry>
        <ind>0.5</ind>
        <dep>0.15</dep>
      </entry>
      <entry>
        <ind>1.0</ind>
        <dep>0</dep>
      </entry>
    </interpolation>
    <axis>
      <x>0</x>
      <y>0</y>
      <z>-1</z>
    </axis>
  </animation>

  <animation>
    <type>translate</type>
    --><!--<object-name>Strut2L</object-name>--><!--
    <object-name>Strut5L</object-name>
    <object-name>WheelL</object-name>
    <property>gear/gear[1]/position-norm</property>
    <interpolation>
      <entry>
        <ind>0.0</ind>
        <dep>0.15</dep>
      </entry>
      <entry>
        <ind>0.5</ind>
        <dep>0.15</dep>
      </entry>
      <entry>
        <ind>1.0</ind>
        <dep>0</dep>
      </entry>
    </interpolation>
    <axis>
      <x>0</x>
      <y>1</y>
      <z>1</z>
    </axis>
  </animation>-->

	<animation>
		<type>rotate</type>
    <object-name>WheelN</object-name>
    <object-name>Jaw</object-name>
		<property>gear/gear[0]/compression-norm[0]</property>
		<factor>100</factor>
		<center>
			<x-m>-4.38195</x-m>
			<y-m>0</y-m>
			<z-m>-0.91517</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>-1</y>
			<z>0</z>
		</axis>
	</animation>

  <animation>
    <type>translate</type>
    <object-name>WheelN</object-name>
    <object-name>Jaw</object-name>
    <object-name>Strut1N</object-name>
    <property>gear/gear[0]/compression-norm[0]</property>
    <factor>0.12</factor>
    <axis>
      <x>0</x>
      <y>0</y>
      <z>1</z>
    </axis>
  </animation>

	<animation>
		<type>translate</type>
    <object-name>Strut2R</object-name>
    <object-name>Strut5R</object-name>
    <object-name>WheelR</object-name>
		<property>gear/gear[2]/compression-norm[0]</property>
		<factor>0.3</factor>
		<axis>
			<x>0</x>
			<y>0</y>
			<z>-1</z>
		</axis>
	</animation>

	<animation>
		<type>translate</type>
    <object-name>Strut2L</object-name>
    <object-name>Strut5L</object-name>
    <object-name>WheelL</object-name>
		<property>gear/gear[1]/compression-norm[0]</property>
		<factor>0.3</factor>
		<axis>
			<x>0</x>
			<y>0</y>
			<z>-1</z>
		</axis>
	</animation>

  <animation>
    <type>translate</type>
    <object-name>Cone</object-name>
    <property>/instrumentation/airspeed-indicator/indicated-mach</property>
    <condition>
      <property>controls/power/cone</property>
    </condition>
    <interpolation> 
      <entry><ind>0</ind><dep>-0.2</dep></entry>
      <entry><ind>0.2</ind><dep>-0.16</dep></entry>
      <entry><ind>1.4</ind><dep>-0.12</dep></entry>
      <entry><ind>1.6</ind><dep>-0.08</dep></entry>
      <entry><ind>1.7</ind><dep>-0.04</dep></entry>
      <entry><ind>1.8</ind><dep>0</dep></entry>
    </interpolation>
    <axis>
      <x>-1</x>
      <y>0</y>
      <z>0</z>
    </axis>
  </animation>

  <animation>
    <type>translate</type>
    <object-name>nozzle_in_2</object-name>
    <property>/engines/engine/n2</property>
    <interpolation>
      <entry><ind> 60 </ind><dep> 0 </dep></entry>
      <entry><ind> 80 </ind><dep>-0.22 </dep></entry>
      <entry><ind> 88 </ind><dep>-0.165 </dep></entry>
      <entry><ind> 90 </ind><dep> 0 </dep></entry>
    </interpolation>
    <axis>
      <x> 1 </x>
      <y> 0 </y>
      <z> 0 </z>
    </axis>
  </animation>

  <animation>
    <type>rotate</type>
      <object-name>ChuteCapL</object-name>
    <property>controls/flight/chute_loaded</property>
    <interpolation>
      <entry>
        <ind> 0 </ind><dep> -20 </dep>
      </entry>
      <entry>
        <ind> 1 </ind><dep>0</dep>
      </entry>
    </interpolation>
    <axis>
      <x1-m>5.41092</x1-m>
      <y1-m>-0.04347</y1-m>
      <z1-m>0.69531</z1-m>
      <x2-m>5.42541</x2-m>
      <y2-m>-0.04347</y2-m>
      <z2-m>0.87725</z2-m>
    </axis>
  </animation>

  <animation>
    <type>rotate</type>
    <object-name>ChuteCapR</object-name>
    <property>controls/flight/chute_loaded</property>
    <interpolation>
      <entry>
        <ind> 0 </ind><dep> 20 </dep>
      </entry>
      <entry>
        <ind> 1 </ind><dep>0</dep>
      </entry>
    </interpolation>
    <axis>
      <x1-m>5.41092</x1-m>
      <y1-m>0.04347</y1-m>
      <z1-m>0.69531</z1-m>
      <x2-m>5.42541</x2-m>
      <y2-m>0.04347</y2-m>
      <z2-m>0.87725</z2-m>
    </axis>
  </animation>
	
</PropertyList>